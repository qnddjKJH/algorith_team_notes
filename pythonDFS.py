# DFS (Depth-First Serach)
# 깊이 우선 탐색 - 깊은 부분을 우선적으로 탐색하는 알고리즘
# DFS는 스택 자료구조(혹은 재귀함수)를 이용
# 1. 탐색 시작 노드를 스택에 삽입 - 방문 처리
# 2. 스택의 최상단 노드에 방문하지 않은 인접한 노드가 하나라도 있으면 그 노드를 스택에 넣고(push)
# 방문 처리, 없으면 스택에서 최상단 노드를 꺼낸다(pop)
# 3. 더 이상 2번의 과정을 수행할 수 없을 때까지 반복

# 그래프 관련 문제는 0번 인덱스를 사용하지 않는 경향이 있고 또한 그것이 편하다
# 0이 1이 되면 머릿속으로 그릴 때 복잡해지므로
graph = [
    [],
    [2, 3, 8],      # 1번노드
    [1, 7],
    [1, 4, 5],
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]
visited = [False] * 9
# 파라미터 (그래프, 시작노드, 방문처리리스트)
def dfs(graph, v, visited):
    # 현재 노드 방문 처리
    visited[v] = True
    print(v, end=' ')
    for i in graph[v]:      # 여기서 graph[v]를 보낸다
        if not visited[i]:
            dfs(graph, i, visited)

dfs(graph, 1, visited)