# 조건문
# 프로그램의 흐름을 제어하는 문법이다.

x = 15
if x >= 10:
    print("x >= 10")
if x >= 0:
    print("x >= 0")
if x >= 30:
    print("x >= 30")
if x < 0:
    print("예시 if 블록 실행되지 않는다.")
print("무조건 실행되는 라인")

# 파이썬에서는 코드의 블록을 들여쓰기로 지정 -> Java 나 C Javascript 는 블록을 {} 지정한다.
# 파이썬 스타일 가이드라인에서는 4개의 공백 문자를 사용하는 것을 표준으로 설정하고 있다.
# 파이썬에서는 else if 가 아닌 elif 를 사용한다.
a = 5
if a >= 0:
    print("a >= 0")
elif a >= -10:
    print("0 > a >= -10")
else:
    print("-10 > a")

# 비교 연산자
# 특정한 두 값을 비교할 때 이용
# == (같음 연산자) = (대입 연산자)의 차이점을 유의
# ==, !=, >, <, >=, <=
# 논리 연산자
# 논리 연산자는 논리값 (Ture/Flase) 사이의 연산을 수행할 때 사용
# and(모두 참일 때 참), or(하나만 참이어도 참), not A(A가 거칫일 때 참)
# 파이썬에서는 & | 기호말고 and or not 영문으로도 쓰인다 &&, || 는 쓰지 않는다.
if True or False: # => True | False 가능
    print("yse")
# in 연산자 not in 연산자
# x in 리스트 - 리스트 안에 x가 들어가 있을 때 참(True) 이다.
# x not in 문자열 - 문자열 안에 x가 들어가 있지 않을 때 참(True)이다.

# 아무것도 처리하고 싶지 않을 때는 pass 키워드 사용
# 디버깅 과정 중 조건문의 형태를 적고 조건문을 처리하는 부분은 비워놓고 싶을 경우

# 조건문에서 실행될 소스코드가 한 줄인 경우, 굳이 줄 바꿈 하지 않아도 된다. : 콜론은 사용해야한다. 까먹지 말 것
# 조건부 표현식(Conditional Expression) 은 if ~ else문을 한 줄에 작성할 수 있도록 해준다.
# 결과값을 바로 대입하는 느낌인듯.
score = 85
result = "Success" if score >= 80 else "Fail"
print(result)

# 파이썬은 다른 프로그래밍 언어와는 다르게 수학의 부등식을 그대로 사용가능.
# x > 0 &(아니면 and) x < 20 을 0 < x < 20 같은 표현 가능 둘다 값이 같다.

